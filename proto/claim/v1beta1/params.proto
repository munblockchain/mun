syntax = "proto3";
package mun.claim.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "claim/v1beta1/claim_record.proto";

option go_package = "mun/x/claim/types";

message ClaimAuthorization {
  string contract_address = 1
      [ (gogoproto.moretags) = "yaml:\"contract_address\"" ];
  Action action = 2 [ (gogoproto.moretags) = "yaml:\"action\"" ];
}

// Params defines the claim module's parameters.
message Params {
  option (gogoproto.goproto_stringer) = false;
  bool airdrop_enabled = 1;

  google.protobuf.Timestamp airdrop_start_time = 2 [
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false,
    (gogoproto.moretags) = "yaml:\"airdrop_start_time\""
  ];
  google.protobuf.Duration duration_until_decay = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.jsontag) = "duration_until_decay,omitempty",
    (gogoproto.moretags) = "yaml:\"duration_until_decay\""
  ];
  google.protobuf.Duration duration_of_decay = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.jsontag) = "duration_of_decay,omitempty",
    (gogoproto.moretags) = "yaml:\"duration_of_decay\""
  ];

  // denom of claimable asset
  string claim_denom = 5;

  // list of contracts and their allowed claim actions
  // repeated ClaimAuthorization allowed_claimers = 6 [
  //   (gogoproto.nullable) = false,
  //   (gogoproto.jsontag) = "allowed_claimers",
  //   (gogoproto.moretags) = "yaml:\"allowed_claimers\""
  // ];
  reserved 6;
}
